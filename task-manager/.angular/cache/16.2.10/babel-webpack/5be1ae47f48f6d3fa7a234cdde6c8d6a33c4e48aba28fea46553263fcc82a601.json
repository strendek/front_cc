{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/progress-spinner\";\nfunction AddTaskComponent_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Confirm\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddTaskComponent_mat_spinner_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\", 7);\n  }\n}\nexport let AddTaskComponent = /*#__PURE__*/(() => {\n  class AddTaskComponent {\n    constructor(router) {\n      this.router = router;\n      this.taskDescription = '';\n      this.isLoading = false;\n    }\n    onSubmit() {\n      if (this.taskDescription.trim().length == 0) {\n        this.isLoading = false;\n        alert(\"Task's description can not be empty!\");\n      } else {\n        const confirmation = confirm('Are you sure you want to add the task?');\n        if (confirmation) {\n          this.isLoading = true;\n          //TODO: API request is missing\n          setTimeout(() => {\n            this.isLoading = false;\n            this.taskDescription = '';\n            alert('Task added successfully!');\n          }, 1500);\n        } else {\n          this.isLoading = false;\n        }\n      }\n    }\n    static #_ = this.ɵfac = function AddTaskComponent_Factory(t) {\n      return new (t || AddTaskComponent)(i0.ɵɵdirectiveInject(i1.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddTaskComponent,\n      selectors: [[\"add-task\"]],\n      decls: 9,\n      vars: 4,\n      consts: [[\"id\", \"mainDiv\"], [1, \"form-container\"], [\"id\", \"descriptionForm\", 3, \"ngSubmit\"], [\"id\", \"description\", \"name\", \"description\", \"placeholder\", \"Description (1-250)\", \"maxlength\", \"250\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 3, \"disabled\"], [4, \"ngIf\"], [\"diameter\", \"20\", 4, \"ngIf\"], [\"diameter\", \"20\"]],\n      template: function AddTaskComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Add task\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 1)(4, \"form\", 2);\n          i0.ɵɵlistener(\"ngSubmit\", function AddTaskComponent_Template_form_ngSubmit_4_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(5, \"textarea\", 3);\n          i0.ɵɵlistener(\"ngModelChange\", function AddTaskComponent_Template_textarea_ngModelChange_5_listener($event) {\n            return ctx.taskDescription = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"button\", 4);\n          i0.ɵɵtemplate(7, AddTaskComponent_span_7_Template, 2, 0, \"span\", 5);\n          i0.ɵɵtemplate(8, AddTaskComponent_mat_spinner_8_Template, 1, 0, \"mat-spinner\", 6);\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngModel\", ctx.taskDescription);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", ctx.isLoading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        }\n      },\n      dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.MaxLengthValidator, i3.NgModel, i3.NgForm, i4.MatProgressSpinner],\n      styles: [\"@font-face{font-family:SpaceGrotesk;src:url(/src/assets/Space_Grotesk/static/SpaceGrotesk-Medium.ttf);font-weight:500;font-style:normal}@font-face{font-family:SpaceGrotesk;src:url(/src/assets/Space_Grotesk/static/SpaceGrotesk-Light.ttf);font-weight:100;font-style:normal}#mainDiv[_ngcontent-%COMP%]{width:100%;display:flex;flex-direction:column;justify-content:start;align-items:start}h2[_ngcontent-%COMP%]{color:#fff;font-family:SpaceGrotesk;padding:15px;font-size:24px;text-shadow:1px 1px 2px rgba(0,0,0,.5)}.form-container[_ngcontent-%COMP%]{padding:0 0 0 15px;border-radius:5px}#descriptionForm[_ngcontent-%COMP%]{display:flex;flex-direction:column}#descriptionForm[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%]{height:200px;border:1px solid #136880;border-radius:4px;padding:5px 10px;margin-bottom:10px;font-size:16px;box-sizing:border-box;resize:none}#descriptionForm[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%]:focus{border-color:#0056b3;outline:none}#descriptionForm[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{cursor:pointer;height:45px;border:1px solid #136880;border-radius:4px;padding:0 20px;font-size:16px;background-color:#fff;color:#136880;transition:background-color .3s ease;margin-top:10px;box-sizing:border-box;display:flex;justify-content:center;align-items:center;min-width:100px}#descriptionForm[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%], #descriptionForm[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{font-family:SpaceGrotesk;font-weight:100}#descriptionForm[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background-color:#e8f0f2}#descriptionForm[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{visibility:visible}#descriptionForm[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   span[hidden][_ngcontent-%COMP%]{visibility:hidden}.spinner-container[_ngcontent-%COMP%]{margin-top:15px;display:flex;justify-content:center;align-items:center;width:10vw;height:10vh;background-color:#fff}.mat-spinner[_ngcontent-%COMP%]{color:red;margin-right:5px}.mat-progress-spinner[_ngcontent-%COMP%]   circle[_ngcontent-%COMP%], .mat-spinner[_ngcontent-%COMP%]   circle[_ngcontent-%COMP%]{stroke:red}\"]\n    });\n  }\n  return AddTaskComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}